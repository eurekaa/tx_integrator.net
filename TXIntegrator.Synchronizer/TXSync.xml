<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>TXSync</name>
  </assembly>
  <members>
    <member name="N:Volcano.TXSync.Model">
    </member>
    <member name="T:Volcano.TXSync.Model.Spedizione">
    </member>
    <member name="M:Volcano.TXSync.Model.Spedizione.#ctor(System.Int32,System.Data.DataRow)">
      <summary>
Initializes a new instance of the <see cref="T:Volcano.TXSync.Model.Spedizione">Spedizione</see> class.</summary>
      <param name="id_viaggio">
</param>
      <param name="spedizione">
</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Spedizione.#ctor(System.Int32,System.Int32)">
      <summary>
Initializes a new instance of the <see cref="T:Volcano.TXSync.Model.Spedizione">Spedizione</see> class.</summary>
      <param name="id_viaggio">
</param>
      <param name="id_spedizione">
</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Spedizione.CreateObject(System.Int32,System.Data.DataRow)">
      <summary>
Riempie l'oggetto a partire da un DataRow. Se la spedizione non è geo-localizzata vengono ricavate le coordinate e salvate sul db.</summary>
      <returns>
void</returns>
      <param name="id_viaggio">
Id del viaggio a cui è associata la spedizione</param>
      <param name="spedizione">
I dati delle spedizione con cui riempire l'oggetto</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Spedizione.GeoLocalizzaSpedizione">
      <summary>
Geolocalizza la spedizione e salva le coordinte sul database.</summary>
      <returns>
void</returns>
    </member>
    <member name="M:Volcano.TXSync.Model.Spedizione.TXCreateObject">
      <summary>
Crea e riempie l'oggetto rappresentante la spedizione da mandare a txmax.</summary>
      <returns>
Insert_new_place_on_trip</returns>
    </member>
    <member name="M:Volcano.TXSync.Model.Spedizione.TXGetStatus(Volcano.TXSync.Transics.TXMax.Login)">
      <summary>
Interroga txmax e ritorna un evento contenente lo stato della spedizione.</summary>
      <returns>
Evento</returns>
      <param name="login">
L'oggetto login da inviare a txmax per l'autenticazione della richiesta.</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Spedizione.TXInsert(Volcano.TXSync.Transics.TXMax.Login)">
      <summary>
Invia la spedizione a txmax e ritorna l'evento relativo all'inserimento.</summary>
      <returns>
Evento</returns>
      <param name="login">
L'oggetto login da inviare a txmax per l'autenticazione della richiesta.</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Spedizione.TXUpdate(Volcano.TXSync.Transics.TXMax.Login)">
      <summary>
Aggiorna la spedizione su txmax e ritorna l'evento relativo all'aggiornamento.</summary>
      <returns>
Evento</returns>
      <param name="login">
L'oggetto login da inviare a txmax per l'autenticazione della richiesta.</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Spedizione.TXDelete(Volcano.TXSync.Transics.TXMax.Login)">
      <summary>
Cancella la spedizione su txmax e ritorna l'evento relativo all'eliminazione.</summary>
      <returns>
Evento</returns>
      <param name="login">
L'oggetto login da inviare a txmax per l'autenticazione della richiesta.</param>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Progressivo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.DestinazioneProvincia">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Societa">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.DestinazioneCap">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.DestinazioneLocalita">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Note">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Id">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Reparto">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.IdViaggio">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Peso">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.DestinazioneRagSoc">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Servizio">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Colli">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.MittenteRagSoc">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.DestinazioneIndirizzo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.KeySpedizione">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.DestinazioneNazione">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Filiale">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.DestinazioneGeoLoc">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Tipo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Anno">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Spedizione.Volume">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:Volcano.TXSync">
    </member>
    <member name="T:Volcano.TXSync.TXSync">
    </member>
    <member name="F:Volcano.TXSync.TXSync.log">
    </member>
    <member name="F:Volcano.TXSync.TXSync.login">
    </member>
    <member name="M:Volcano.TXSync.TXSync.Main(System.String[])">
      <param name="args">
</param>
    </member>
    <member name="M:Volcano.TXSync.TXSync.TXLogin">
    </member>
    <member name="M:Volcano.TXSync.TXSync.TXSyncViaggi">
    </member>
    <member name="M:Volcano.TXSync.TXSync.TXSyncSpedizioni">
    </member>
    <member name="M:Volcano.TXSync.TXSync.DBSyncViaggi">
    </member>
    <member name="M:Volcano.TXSync.TXSync.DBSyncSpedizioni">
    </member>
    <member name="N:Volcano.TXSync.Core">
    </member>
    <member name="T:Volcano.TXSync.Core.SerializationType">
    </member>
    <member name="F:Volcano.TXSync.Core.SerializationType.BINARY">
    </member>
    <member name="F:Volcano.TXSync.Core.SerializationType.XML">
    </member>
    <member name="F:Volcano.TXSync.Core.SerializationType.JSON">
    </member>
    <member name="T:Volcano.TXSync.Core.Serializer">
    </member>
    <member name="M:Volcano.TXSync.Core.Serializer.SerializeObjectList(dynamic,Volcano.TXSync.Core.SerializationType,Volcano.TXSync.Core.CompressionType)">
      <summary>
Funzione per la serializzazione di liste di oggetti.</summary>
      <returns>
string</returns>
      <param name="objList">
La lista di oggetti da serializzare.</param>
      <param name="serializationType">
</param>
      <param name="compressionType">
[Optional: default=nothing] Il tipo di compressione da impiegare.</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Serializer.UnserializeObjectList(System.String,System.Type,Volcano.TXSync.Core.SerializationType,Volcano.TXSync.Core.CompressionType)">
      <summary>
Funzione per la deserializzazione di liste di oggetti.</summary>
      <returns>
dynamic</returns>
      <param name="data">
La stringa contenente la lista di oggetti serializzata.</param>
      <param name="objType">
</param>
      <param name="serializationType">
</param>
      <param name="compressionType">
[Optional: default=nothing] Il tipo di compressione usato.</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Serializer.SerializeObject(System.Object,Volcano.TXSync.Core.SerializationType,Volcano.TXSync.Core.CompressionType)">
      <summary>
Funzione per la serializzazione di oggetti.</summary>
      <returns>
string</returns>
      <param name="obj">
</param>
      <param name="serializationType">
</param>
      <param name="compressionType">
[Optional: default=nothing] Il tipo di compressione da impiegare.</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Serializer.UnserializeObject(System.String,System.Type,Volcano.TXSync.Core.SerializationType,Volcano.TXSync.Core.CompressionType)">
      <summary>
Funzione per la deserializzazione di oggetti.</summary>
      <returns>
dynamic</returns>
      <param name="data">
La stringa contenente l'oggetto serializzato.</param>
      <param name="objType">
</param>
      <param name="serializationType">
</param>
      <param name="compressionType">
[Optional: default=nothing] Il tipo di compressione usato.</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Serializer.Copy(dynamic)">
      <summary>
Funzione per la clonazione di oggetti.</summary>
      <returns>
dynamic</returns>
      <param name="obj">
L'oggetto da clonare.</param>
    </member>
    <member name="T:Volcano.TXSync.Core.DMLType">
    </member>
    <member name="F:Volcano.TXSync.Core.DMLType.READ">
    </member>
    <member name="F:Volcano.TXSync.Core.DMLType.WRITE">
    </member>
    <member name="T:Volcano.TXSync.Core.Dao">
    </member>
    <member name="F:Volcano.TXSync.Core.Dao._connectionString">
    </member>
    <member name="F:Volcano.TXSync.Core.Dao._connection">
    </member>
    <member name="M:Volcano.TXSync.Core.Dao.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:Volcano.TXSync.Core.Dao">Dao</see> class.</summary>
    </member>
    <member name="M:Volcano.TXSync.Core.Dao.#ctor(System.String)">
      <summary>
Initializes a new instance of the <see cref="T:Volcano.TXSync.Core.Dao">Dao</see> class.</summary>
      <param name="connectionString">
</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Dao.~Dao">
      <summary>
Distruttore: viene invocato automaticamente dal garbage collector quando l'oggetto viene rilasciato.</summary>
      <returns>
void</returns>
    </member>
    <member name="M:Volcano.TXSync.Core.Dao.Connect">
      <summary>
Funzione per l'apertura della connessione.</summary>
      <returns>
void</returns>
    </member>
    <member name="M:Volcano.TXSync.Core.Dao.Disconnect">
      <summary>
Funzione per la chiusura della connessione.</summary>
      <returns>
void</returns>
    </member>
    <member name="M:Volcano.TXSync.Core.Dao.ExecuteStoredProcedure(Volcano.TXSync.Core.DMLType,System.String,System.Collections.Hashtable)">
      <summary>
Funzione generica per il lancio di una stored procedure. In caso di stored di insert l'identity è contenuta nella colonna "Id" della prima riga della prima tabella. In caso di stored di update/delete il numero di righe coinvolte è contenuta nella colonna "ROWS_AFFECTED" della prima riga della prima tabella.</summary>
      <returns>
DataSet</returns>
      <param name="dmltype">
</param>
      <param name="storedprocedure">
</param>
      <param name="parameters">
</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Dao.ExecuteNonQuery(System.String,System.Collections.Hashtable)">
      <summary>
Funzione per il lancio di comandi sql</summary>
      <returns>
DataTable</returns>
      <param name="sql">
</param>
      <param name="parameters">
</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Dao.ExecuteQuery(System.String,System.Collections.Hashtable)">
      <summary>
Funzione per il lancio di query sql</summary>
      <returns>
DataTable</returns>
      <param name="sql">
</param>
      <param name="parameters">
</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Dao.CreateSqlParameters(System.Data.SqlClient.SqlCommand,System.Collections.Hashtable)">
      <summary>
Funzione per la creazione dei parametri sql.</summary>
      <returns>
void</returns>
      <param name="cmd">
SqlCommand su cui agganciare i parametri</param>
      <param name="parameters">
Hashtable contenente i nomi e i valori dei parametri (inseriti come chiave-valore)</param>
    </member>
    <member name="T:Volcano.TXSync.Model.NotaSpesa">
    </member>
    <member name="M:Volcano.TXSync.Model.NotaSpesa.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:Volcano.TXSync.Model.NotaSpesa">NotaSpesa</see> class.</summary>
    </member>
    <member name="M:Volcano.TXSync.Model.NotaSpesa.DBInsert">
      <summary>
Inserisce la nota spesa nel database.</summary>
      <returns>
void</returns>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.Tipo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.IdViaggio">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.Prezzo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.Id">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.Codice">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.GeoCoordinate">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.Valuta">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.Descrizione">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.NotaSpesa.Indirizzo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:Volcano.TXSync.Model.TipoPianificazione">
    </member>
    <member name="F:Volcano.TXSync.Model.TipoPianificazione.VIAGGIO">
    </member>
    <member name="F:Volcano.TXSync.Model.TipoPianificazione.SPEDIZIONE">
    </member>
    <member name="T:Volcano.TXSync.Model.Pianificazione">
    </member>
    <member name="M:Volcano.TXSync.Model.Pianificazione.TXSync_LockPianificazioni(Volcano.TXSync.Model.TipoPianificazione)">
      <summary>
Cambia lo stato delle pianificazioni (quelle con stato "DA_SINCRONIZZARE (TODO)" in modo che possano essere elaborate senza interferenze.</summary>
      <returns>
void</returns>
      <param name="tipoPianificazione">
Il tipo di pianificazione (viaggio, spedizione, ec).</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Pianificazione.TXSync_UnlockPianificazioni(Volcano.TXSync.Model.TipoPianificazione)">
      <summary>
Cambia lo stato delle pianificazioni in "sincronizzate".</summary>
      <returns>
void</returns>
      <param name="tipoPianificazione">
Il tipo di pianificazione (viaggio, spedizione, ec).</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Pianificazione.TXSync_GetPianificazioni(Volcano.TXSync.Model.TipoPianificazione)">
      <summary>
Ritorna le pianificazioni da mandare a txmax (devono essere state precedentemente lockate dalla funzione TXSync_LockPianificazioni).</summary>
      <returns>
List</returns>
      <param name="tipoPianificazione">
Il tipo di pianificazione (viaggio, spedizione, ec).</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Pianificazione.DBSync_GetPianificazioni(Volcano.TXSync.Model.TipoPianificazione)">
      <summary>
Ritorna le pianificazioni da controllare su txmax e aggiornare sul database (stato: NULL, NOT_EXECUTED o BUSY).</summary>
      <returns>
List</returns>
      <param name="tipoPianificazione">
Il tipo di pianificazione (viaggio, spedizione, ec).</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Pianificazione.#ctor(System.Data.DataRow)">
      <summary>
Initializes a new instance of the <see cref="T:Volcano.TXSync.Model.Pianificazione">Pianificazione</see> class.</summary>
      <param name="pianificazione">
</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Pianificazione.CreateObject(System.Data.DataRow)">
      <summary>
Riempie l'oggetto a partire da un DataRow.</summary>
      <param name="pianificazione">
DataRow contenente i dati della pianificazione</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Pianificazione.DBUpdate">
      <summary>
Aggiorna la pianificazione sul database.</summary>
      <returns>
void</returns>
    </member>
    <member name="P:Volcano.TXSync.Model.Pianificazione.IdViaggio">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Pianificazione.IdSpedizione">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Pianificazione.Id">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Pianificazione.SyncTask">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Pianificazione.Stato">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Pianificazione.SyncStato">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:Volcano.TXSync.Model.Viaggio">
    </member>
    <member name="M:Volcano.TXSync.Model.Viaggio.#ctor(System.Data.DataRow)">
      <summary>
Initializes a new instance of the <see cref="T:Volcano.TXSync.Model.Viaggio">Viaggio</see> class.</summary>
      <param name="viaggio">
</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Viaggio.#ctor(System.Int32)">
      <summary>
Initializes a new instance of the <see cref="T:Volcano.TXSync.Model.Viaggio">Viaggio</see> class.</summary>
      <param name="id_viaggio">
</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Viaggio.CreateObject(System.Data.DataRow)">
      <summary>
Riempie l'oggetto.</summary>
      <returns>
void</returns>
      <param name="viaggio">
DataRow con i dati relativi al viaggio.</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Viaggio.TXCreateObject">
      <summary>
Crea e riempie l'oggetto "viaggio" da mandare a txmax.</summary>
      <returns>
PlanningInsert</returns>
    </member>
    <member name="M:Volcano.TXSync.Model.Viaggio.TXGetStatus(Volcano.TXSync.Transics.TXMax.Login)">
      <summary>
Interroga txmax e ritorna un evento contenente lo stato del viaggio.</summary>
      <returns>
Evento</returns>
      <param name="login">
L'oggetto login da inviare a txmax per l'autenticazione della richiesta.</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Viaggio.TXGetCostReport(Volcano.TXSync.Transics.TXMax.Login)">
      <summary>
Interroga txmax riguardo ai costi del viaggio, inserisce nel database le note spese, e ritorna un evento contenente lo stato del viaggio impostato a "CLOSED".</summary>
      <returns>
Evento</returns>
      <param name="login">
L'oggetto login da inviare a txmax per l'autenticazione della richiesta.</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Viaggio.TXInsert(Volcano.TXSync.Transics.TXMax.Login)">
      <summary>
Invia il viggio a txmax e ritorna l'evento relativo all'inserimento.</summary>
      <returns>
Evento</returns>
      <param name="login">
L'oggetto login da inviare a txmax per l'autenticazione della richiesta.</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Viaggio.TXUpdate(Volcano.TXSync.Transics.TXMax.Login)">
      <summary>
Invia il viaggio a txmax e ritorna l'evento relativo all'aggiornamento.</summary>
      <returns>
Evento</returns>
      <param name="login">
L'oggetto login da inviare a txmax per l'autenticazione della richiesta.</param>
    </member>
    <member name="M:Volcano.TXSync.Model.Viaggio.TXDelete(Volcano.TXSync.Transics.TXMax.Login)">
      <summary>
Cancella il viaggio da txmax e ritorna l'evento relativo all'eliminazione.</summary>
      <returns>
Evento</returns>
      <param name="login">
L'oggetto login da inviare a txmax per l'autenticazione della richiesta.</param>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.CodiceAutista">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.DestinazioneViaggio">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.Anno">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.Reparto">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.KeyViaggio">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.CodiceMezzo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.Note">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.Societa">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.UtenteCompetenza">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.Id">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.DataViaggio">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.MailUtenteCompetenza">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.Filiale">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.Progressivo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Viaggio.Servizio">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:Volcano.TXSync.Model.Evento">
    </member>
    <member name="M:Volcano.TXSync.Model.Evento.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:Volcano.TXSync.Model.Evento">Evento</see> class.</summary>
    </member>
    <member name="M:Volcano.TXSync.Model.Evento.DBInsert">
      <summary>
Inserisce l'evento nel database.</summary>
      <returns>
void</returns>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.Id">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.SyncTask">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.Stato">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.XmlResponse">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.SyncTipo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.XmlRequest">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.Note">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.IdPianificazione">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.SyncStato">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:Volcano.TXSync.Model.Evento.SyncData">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:Volcano.TXSync.Core.GeoCoder">
    </member>
    <member name="M:Volcano.TXSync.Core.GeoCoder.EncodeAddress(System.String)">
      <summary>
Traduce un indirizzo in coordinate di latitudine e longitudine.</summary>
      <returns>
string</returns>
      <param name="address">
L'indirizzo da convertire.</param>
    </member>
    <member name="M:Volcano.TXSync.Core.GeoCoder.DecodeAddress(System.String,System.String)">
      <summary>
Traduce coordinate di latitudine e longitudine in un indirizzo.</summary>
      <returns>
string</returns>
      <param name="lat">
latitudine.</param>
      <param name="lng">
longitudine.</param>
    </member>
    <member name="M:Volcano.TXSync.Core.GeoCoder.DecodeAddress(System.String)">
      <summary>
Traduce coordinate di latitudine e longitudine in un indirizzo.</summary>
      <returns>
string</returns>
      <param name="coordinate">
latitudine,longitudine.</param>
    </member>
    <member name="T:Volcano.TXSync.Core.CompressionType">
    </member>
    <member name="F:Volcano.TXSync.Core.CompressionType.NOTHING">
    </member>
    <member name="F:Volcano.TXSync.Core.CompressionType.GZIP">
    </member>
    <member name="T:Volcano.TXSync.Core.Compressor">
    </member>
    <member name="M:Volcano.TXSync.Core.Compressor.Compress(System.String,Volcano.TXSync.Core.CompressionType)">
      <summary>
Funzione generica per la compressione di stringhe (utile per gli oggetti serializzati).</summary>
      <returns>
string</returns>
      <param name="data">
La stringa da comprimere.</param>
      <param name="compressionType">
Il tipo di compressione da usare.</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Compressor.Decompress(System.String,Volcano.TXSync.Core.CompressionType)">
      <summary>
Funzione generica per la decompressione di stringhe (utile per gli oggetti serializzati).</summary>
      <returns>
string</returns>
      <param name="data">
La stringa da comprimere.</param>
      <param name="compressionType">
Il tipo di compressione da usare.</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Compressor.CompressGzip(System.String)">
      <summary>
Funzione per la compressione di stringhe con algoritmo GZIP.</summary>
      <returns>
string</returns>
      <param name="data">
La stringa da comprimere.</param>
    </member>
    <member name="M:Volcano.TXSync.Core.Compressor.DecompressGzip(System.String)">
      <summary>
Funzione specifica per la decompressione di stringhe con algoritmo GZIP.</summary>
      <returns>
string</returns>
      <param name="data">
La stringa da comprimere.</param>
    </member>
  </members>
</doc>
